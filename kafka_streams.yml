version: '2'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19091
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:19091,localhost:19092,localhost:19093
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:19091,localhost:19092,localhost:19093
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:19091,localhost:19092,localhost:19093
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.2.2
    hostname: localhost
    container_name: schema-registry
    network_mode: host
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - 8081:38081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: localhost:22181,localhost:32181,localhost:42181
    extra_hosts:
      - "moby:127.0.0.1"

  restproxy:
    image: confluentinc/cp-kafka-rest:latest
    hostname: localhost
    container_name: restproxy
    ports:
      - 8082:38082
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: localhost:19091,localhost:19092,localhost:19093
      KAFKA_REST_LISTENERS: http://localhost:38082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://localhost:38081
      KAFKA_REST_HOST_NAME: localhost
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - kafka-1
      - kafka-2
      - kafka-3
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  # connect:
  #   image: confluentinc/kafka-connect-datagen:latest
  #   hostname: localhost
  #   container_name: connect
  #   depends_on:
  #     - zookeeper-1
  #     - zookeeper-2
  #     - zookeeper-3
  #     - kafka-1
  #     - kafka-2
  #     - kafka-3
  #     - schema-registry
  #   ports:
  #     - "18083:18083"
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: localhost:19092,localhost:29092,localhost:39092
  #     CONNECT_REST_ADVERTISED_HOST_NAME: localhost
  #     CONNECT_REST_PORT: 18083
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
  #     CONNECT_OFFSET_FLUSH_INTERVAL_MS: 60000
  #     CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
  #     CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://localhost:38081
  #     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
  #     # Assumes image is based on confluentinc/kafka-connect-datagen:latest which is pulling 5.1.1 Connect image
  #     CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.2.2.jar
  #     CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  #     CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
  #     CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
  #   network_mode: host
  #   extra_hosts:
  #     - "moby:127.0.0.1"

#  ksql-server:
#    image: confluentinc/cp-ksql-server:5.2.2
#    hostname: localhost
#    container_name: ksql-server
#    depends_on:
#      - zookeeper-1
#      - zookeeper-2
#      - zookeeper-3
#      - kafka-1
#      - kafka-2
#      - kafka-3
#      - schema-registry
#    ports:
#      - "18088:18088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
#      KSQL_BOOTSTRAP_SERVERS: localhost:19092,localhost:29092,localhost:39092
#      KSQL_HOST_NAME: localhost
#      KSQL_APPLICATION_ID: "ksql-server"
#      KSQL_LISTENERS: "http://0.0.0.0:18088"
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://localhost:8081"
#      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#    network_mode: host
#    extra_hosts:
#      - "moby:127.0.0.1"

#  ksql-cli:
#    image: confluentinc/cp-ksql-cli:latest
#    container_name: ksql-cli
#    depends_on:
#      - zookeeper-1
#      - zookeeper-2
#      - zookeeper-3
#      - kafka-1
#      - kafka-2
#      - kafka-3
#      - ksql-server
#    entrypoint: /bin/sh
#    tty: true
#    network_mode: host
#    extra_hosts:
#      - "moby:127.0.0.1"

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: localhost
    container_name: control-center
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry
      # - connect
#      - ksql-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: localhost:19092,localhost:29092,localhost:39092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      CONTROL_CENTER_CONNECT_CLUSTER: localhost:18083
      CONTROL_CENTER_KSQL_URL: "http://localhost:18088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:18088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://localhost:38081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"

  postgres:
    image: postgres:9.6
    container_name: postgres
    depends_on:
      - control-center
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=langdating
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"


  redis:
    image: 'redis:latest'
    command: redis-server --requirepass redis
    container_name: redis
    ports:
      - "6379:6379"
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"


# docker-compose -f kafka_streams.yml up -d
# docker-compose -f kafka_streams.yml down


